{
    "name": "App dev",

    // Update the 'dockerComposeFile' list if you have more compose files or use different names.
    // The .devcontainer/docker-compose.yml file contains any overrides you need/want to make.
    "dockerComposeFile": [
        "../docker-compose.yml"
        // "docker-compose.yml"
    ],

    // The 'service' property is the name of the service for the container that VS Code should
    // use. Update this value and .devcontainer/docker-compose.yml to the real service name.
    "service": "dev",

    // The optional 'workspaceFolder' property is the path VS Code should open by default when
    // connected. This is typically a file mount in .devcontainer/docker-compose.yml
    "workspaceFolder": "/app",

    // Start specific services in your Docker Compose config.
    "runServices": ["dev", "postgres"],

    // Connect as a non-root user. See https://aka.ms/vscode-remote/containers/non-root.
    "remoteUser": "nonroot",

    // "build": {
    //     "dockerfile": "../deploy/debian.Dockerfile",
    //     "context": "..",
    //     "target": "dev",
    //     "args": {
    //         "REGISTRY": "docker.io/"
    //     }
    // },

    // Bind mount local source code into new container.
    // "remoteEnv": {
    //      "LOCAL_WORKSPACE_FOLDER": "${localWorkspaceFolder}"
    // },

    // Set *default* container specific settings.json values on container create.
    "settings": {
        "terminal.integrated.defaultProfile.linux": "bash"
        // "terminal.integrated.shell.linux": {
        //   "path": "/bin/bash"
        // }
    },

  // IDs of extensions you want installed when the container is created.
  "extensions": [
    "ms-azuretools.vscode-docker"
  ],

  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  "forwardPorts": [4000]

  // Uncomment the next line if you want to keep your containers running after VS Code shuts down.
  // "shutdownAction": "none",

  // Run commands after the container is created - for example installing curl.
  // "postCreateCommand": "apt-get update && apt-get install -y curl",
}
