---
name: CI Earthly
on: push
# on:
#   push:
#     branches: [main]
#   pull_request:
#     branches: [main]
#     types: [labeled,synchronize,reopened,unlabeled]
jobs:
  build:
    runs-on: ubuntu-latest
    # runs-on: ubuntu-20.04
    # Needed to interact with GitHub's OIDC Token endpoint for AWS
    permissions:
      id-token: write
      contents: read
    env:
      REGISTRY: 770916339360.dkr.ecr.ap-northeast-1.amazonaws.com/
      REGISTRY_NAME: 770916339360.dkr.ecr.ap-northeast-1.amazonaws.com
      IMAGE_NAME: foo-app
      # DOCKER_BUILDKIT: 1
      # DOCKER_CLI_EXPERIMENTAL: enabled
      # COMPOSE_DOCKER_CLI_BUILD: 1
      FORCE_COLOR: 1
      AWS_REGION: ap-northeast-1
    steps:
      - name: Dump Event
        run: cat "$GITHUB_EVENT_PATH"

      # https://github.com/marketplace/actions/setup-earthly
      - uses: earthly/actions-setup@v1

      - name: Earthly version
        run: earthly --version

      # https://github.com/aws-actions/configure-aws-credentials
      # https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-amazon-web-services
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::770916339360:role/foo-dev-ecr-github-action-role
          aws-region: ${{ env.AWS_REGION }}

      - name: Display AWS identity
        run: aws sts get-caller-identity

      # https://github.com/aws-actions/amazon-ecr-login
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

#       - name: Login to ECR
#         id: login-ecr
#         uses: docker/login-action@v2
#         with:
#           registry: ${{ env.REGISTRY_NAME }}
      #     username: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # https://github.com/marketplace/actions/docker-login
      - name: Login to DockerHub
        id: login-docker-hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Checkout source
        uses: actions/checkout@v2

      - name: Put back the git branch into git (Earthly uses it for tagging)
        id: branch
        run: |
          branch=""
          if [ -n "$GITHUB_HEAD_REF" ]; then
            branch="$GITHUB_HEAD_REF"
          else
            branch="${GITHUB_REF##*/}"
          fi
          git checkout -b "$branch" || true
          echo "::set-output name=branch::${branch}"

      # - name: Set up QEMU for multi-platform builds
      #   id: qemu
      #   uses: docker/setup-qemu-action@v2

      # - name: Display available platforms
      #   run: echo "${{ steps.qemu.outputs.platforms }}"

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Dump Environment
        run: env|sort

      - name: Build with Earthly
        # env:
        #   # REGISTRY: "${{ steps.login-ecr.outputs.registry }}/"
        # run: earthly --ci --push +build
        # run: earthly -P -V +all
        # run: earthly -P -V --build-arg REGISTRY --strict --push +all
        run: earthly -P -V --build-arg REGISTRY --remote-cache="${REGISTRY}/${IMAGE_NAME}:cache" --ci --push +all
        # run: earthly -P -V +all-platforms
        # run: earthly -P -V --platform=linux/arm64 +deploy
        # run: earthly -P -V --platform=linux/arm64 +deploy-scan
