---
name: CI registry caching
on: push
# on:
#   push:
#     branches: [main]
#   pull_request:
#     branches: [main]
#     types: [labeled,synchronize,reopened,unlabeled]
jobs:
  build:
    runs-on: ubuntu-latest
    # runs-on: ubuntu-20.04
    permissions:
      id-token: write
      contents: read
    env:
      REGISTRY: 770916339360.dkr.ecr.ap-northeast-1.amazonaws.com/
      REGISTRY_NAME: 770916339360.dkr.ecr.ap-northeast-1.amazonaws.com
      APP_NAME: foo-app
    steps:
      - name: Dump Event
        run: cat "$GITHUB_EVENT_PATH"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::770916339360:role/foo-dev-codebuild-github-action-role
          aws-region: ap-northeast-1

      - name: Display AWS identity
        run: aws sts get-caller-identity

      - name: Checkout source
        uses: actions/checkout@v2

      - name: Set variables
        id: vars
        # env:
        #   REGISTRY: 770916339360.dkr.ecr.ap-northeast-1.amazonaws.com/
        run: |
          echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-7)" >> $GITHUB_ENV
          echo "::set-output name=registry::${REGISTRY_NAME}"
          echo "::set-output name=github_sha::${GITHUB_SHA}"

      # https://github.com/marketplace/actions/docker-login
      - name: Login to ECR
        id: login-ecr
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY_NAME }}
      #     username: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Login to Docker Hub
        id: login-docker-hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master
        with:
          install: true

      - name: Build Docker image and push
        id: docker
        uses: docker/build-push-action@v2
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          file: ./deploy/Dockerfile.debian
          # push: true
          push: false
          cache-from: type=registry,ref=${{ env.REGISTRY_NAME }}/${{ env.APP_NAME }}:latest
          cache-to: type=inline,mode=max
          tags: |
            ${{ env.REGISTRY_NAME }}/${{ env.APP_NAME }}:latest
            ${{ env.REGISTRY_NAME }}/${{ env.APP_NAME }}:${{ steps.vars.outputs.github_sha }}
