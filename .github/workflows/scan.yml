on:
  schedule:
    # Once a day at midnight
    - cron: '0 0 * * *'
    # Once an hour
    # - cron: '0 * * * *'

name: Security scan
env:
  IMAGE_NAME: foo-app
  IMAGE_OWNER: ${{ github.repository_owner }}
  # Registry for dev and test images
  REGISTRY: ghcr.io/
  # Registry for public images, default is docker.io
  PUBLIC_REGISTRY: ""
  # Tag for release images
  IMAGE_TAG: latest
jobs:
  scan:
    name: Security scan prod image
    runs-on: ubuntu-latest
    permissions:
      # Interact with GitHub's OIDC Token endpoint for AWS
      id-token: write
      contents: read

      # Read from ghcr.io repository
      packages: read

      # Upload JUnit report files
      # https://github.com/EnricoMi/publish-unit-test-result-action#permissions
      checks: write
      pull-requests: write
      issues: read

      # Upload SARIF report files
      security-events: write
    steps:
      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Check out source
        uses: actions/checkout@v3

      - name: Pull repos
        run: echo "deploy" | xargs -n 1 -P 8 docker compose pull

      - name: Scan image with trivy
        uses: aquasecurity/trivy-action@master
        # https://github.com/aquasecurity/trivy-action
        # https://github.com/marketplace/actions/aqua-security-trivy#inputs
        with:
          image-ref: ghcr.io/${{env.IMAGE_OWNER}}/${{env.IMAGE_NAME}}:${{env.IMAGE_TAG}}
          # exit-code: '1' # fail build
          # ignore-unfixed: true
          # vuln-type: 'os,library'
          # severity: 'CRITICAL,HIGH'
          cache-dir: ./.cache
          # format: 'sarif'
          # output: './sarif-reports/trivy.sarif'

      # - name: Upload Trivy scan results to GitHub Security tab
      #   uses: github/codeql-action/upload-sarif@v2
      #   # Requires GitHub Advanced Security
      #   # https://docs.github.com/en/get-started/learning-about-github/about-github-advanced-security
      #   # https://docs.github.com/en/code-security/code-scanning/integrating-with-code-scanning/sarif-support-for-code-scanning
      #   # https://docs.github.com/en/code-security/code-scanning/integrating-with-code-scanning/uploading-a-sarif-file-to-github
      #   if: always()
      #   with:
      #     sarif_file: './sarif-reports/'
      #     category: trivy

      - name: Scan image with grype
        uses: anchore/scan-action@v3
        # https://github.com/marketplace/actions/anchore-container-scan
        id: scan-grype
        with:
          image: ghcr.io/${{env.IMAGE_OWNER}}/${{env.IMAGE_NAME}}:${{env.IMAGE_TAG}}
          # severity-cutoff: critical
          fail-build: false
          output-format: table

      # - name: Upload grype scan results to GitHub Security tab
      #   uses: github/codeql-action/upload-sarif@v2
      #   if: always()
      #   with:
      #     sarif_file: ${{ steps.scan-grype.outputs.sarif }}
      #     category: grype
